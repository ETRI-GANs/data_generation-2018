<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="checkEntity">
    <resultMap id="AnnotationMap" type="AnnotationVo">
        <result property="annId" column="ANN_ID"/>
        <result property="name" column="NAME"/>
        <result property="startPoint" column="START_POINT"/>
        <result property="endPoint" column="END_POINT"/>
        <result property="content" column="CONTENT"/>
        <result property="recordId" column="RECORD_ID"/>
        <result property="recordSeq" column="RECORD_SEQ"/>
        <result property="count" column="COUNT"/>
    </resultMap>
    
    <resultMap id="DocumentMap" type="DocumentVo">
    	<result property="recordId" column="RECORD_ID"/>
        <result property="docId" column="DOC_ID"/>
        <result property="subject" column="subject"/>
        <result property="count" column="COUNT"/>
        <result property="regId" column="REG_ID" />
    </resultMap>	
     
    <resultMap id="EntityMap" type="EntityVo">
        <result property="entId" column="ENT_ID"/>
        <result property="name" column="NAME"/>
        <result property="label" column="LABELS"/>
        <result property="bgColor" column="BGCOLOR"/>
        <result property="fgColor" column="FGCOLOR"/>
        <result property="parentEnt" column="PARENT_ENT"/>
        <result property="groupName" column="GROUP_NAME"/>
        <result property="jstreeName" column="JSTREENAME"/>
    </resultMap>
    
    <select id="getEntityList" parameterType="CommonVo" resultMap="EntityMap">
		SELECT
			ENT_ID, NAME, BGCOLOR, FGCOLOR, PARENT_ENT, GROUP_NAME, LABELS,
			CONCAT(NAME, ' (', LABELS, ') ') as JSTREENAME
		FROM 
			ENTITY
		WHERE 
			group_name = #{groupName}
		ORDER BY ENT_ID ASC
	</select>
	
	<select id="getKeywordList" parameterType="java.util.HashMap" resultMap="AnnotationMap" >
		SELECT a.content, a.count
   		FROM (
			SELECT 
				a.CONTENT as content, count(a.CONTENT) as count
			FROM 
				ANNOTATION_NEW a 
					inner join RECORD_NEW r
						on a.RECORD_ID = r.RECORD_ID
	 						and a.RECORD_SEQ = r.RECORD_SEQ
	 						and r.GROUP_NAME = #{groupName}
	 						and a.NAME in ( 
	 							SELECT name FROM ENTITY WHERE ent_id in 
		 						<foreach collection="entIds" item="entId" open="(" close=")" separator=",">
						    		${entId}
								</foreach>
	 						)
			GROUP BY a.CONTENT
			ORDER BY count(a.CONTENT) desc
		) a
		WHERE 
			1=1
			<if test='searchTerm != null and searchTerm != ""'>
				AND a.CONTENT like CONCAT('%',#{searchTerm},'%') 
			</if>
	    <choose>
	    	<when test="orderField == null">
	    		ORDER BY count desc		
	    	</when>
	    	<otherwise>
	    		ORDER BY ${orderField} ${orderOpt}
	    	</otherwise>
	    </choose>
		
	</select>
	
	<select id="getLabelingDocList" resultMap="DocumentMap" parameterType="AnnotationVo">
		SELECT 
			r.RECORD_ID, d.DOC_ID, d.SUBJECT, count(*) as count
		FROM 
			DOCUMENT_NEW d 
			inner join RECORD_NEW r
				on d.DOC_ID = r.DOC_ID 
			inner join ANNOTATION_NEW a
				on a.RECORD_ID = r.RECORD_ID and a.RECORD_SEQ = r.RECORD_SEQ
		WHERE 
			a.CONTENT = #{content} 
			and r.GROUP_NAME = #{groupName}
			and a.NAME in ( 
				SELECT name FROM ENTITY WHERE ent_id in 
				<foreach collection="searchTagName" item="entId" open="(" close=")" separator=",">
	    			${entId}
				</foreach>
			)
		GROUP BY d.DOC_ID
		ORDER BY count desc
	</select>
	
	<select id="getWorngCheckLabelingDocList" resultMap="DocumentMap" parameterType="AnnotationVo">
		SELECT 
			r.RECORD_ID, d.DOC_ID, d.SUBJECT, count(*) as count
		FROM 
			DOCUMENT_NEW d 
			inner join RECORD_NEW r
				on d.DOC_ID = r.DOC_ID 
			inner join ANNOTATION_NEW a
				on a.RECORD_ID = r.RECORD_ID and a.RECORD_SEQ = r.RECORD_SEQ
		WHERE 
			a.CONTENT = #{content} 
			and r.GROUP_NAME = #{groupName}
			and a.NAME not in ( 
				SELECT name FROM ENTITY WHERE ent_id in 
				<foreach collection="searchTagName" item="entId" open="(" close=")" separator=",">
	    			${entId}
				</foreach>
			)
		GROUP BY d.DOC_ID
		ORDER BY count desc
	</select>
	
	<select id="getUnlabelingList" resultMap="DocumentMap" parameterType="java.util.HashMap">
		SELECT 
			d.DOC_ID, d.SUBJECT, r.RECORD_ID, IFNULL(r.REG_ID, d.reg_id) as REG_ID
		FROM DOCUMENT_NEW d 
		LEFT OUTER JOIN RECORD_NEW r
		on d.DOC_ID = r.DOC_ID 
			and r.GROUP_NAME = #{groupName}
		WHERE 
			1=1
			<if test='list.size != 0'>
				AND	d.DOC_ID not in 
				<foreach collection="list" item="list" open="(" close=")" separator=",">
					${list.docId}
				</foreach>
				<if test="searchKeyword != null">
					AND d.CONTENT like   CONCAT('%',#{searchKeyword},'%')
				</if>
			</if>
			
		ORDER BY SUBJECT desc
	</select>
	
</mapper>